# Generated SBE (Simple Binary Encoding) message codec
# Code generated by SBE. DO NOT EDIT.

@inline function encode_le(::Type{T}, buffer, offset, value) where {T}
    reinterpret(T, view(buffer, offset+1:offset+sizeof(T)))[] = htol(value)
end

@inline function encode_be(::Type{T}, buffer, offset, value) where {T}
    reinterpret(T, view(buffer, offset+1:offset+sizeof(T)))[] = hton(value)
end

@inline function decode_le(::Type{T}, buffer, offset) where {T}
    ltoh(reinterpret(T, view(buffer, offset+1:offset+sizeof(T)))[])
end

@inline function decode_be(::Type{T}, buffer, offset) where {T}
    ntoh(reinterpret(T, view(buffer, offset+1:offset+sizeof(T)))[])
end

@inline function rstrip_nul(a::AbstractVector{UInt8})
    pos = findfirst(iszero, a)
    len = pos !== nothing ? pos - 1 : Base.length(a)
    return view(a, 1:len)
end

struct SbeCodecContext
    position_ptr::Base.RefValue{Int64}
    SbeCodecContext() = new(Ref(0))
end
sbe_position_ptr(c::SbeCodecContext) = c.position_ptr
sbe_position!(c::SbeCodecContext, position) = c.position_ptr[] = position
sbe_position(c::SbeCodecContext) = c.position_ptr[]

